// Divide uma coluna textual (colunaOrigem) em N colunas, nomeadas com o item (presente em listaItens) que foi verificado estar presente na coluna que está sendo analizada (colunaOrigem).

let
    AdicionarColunasFinal = (tabela as table, colunaOrigem as text, listaItens as list) as table =>
    let
        // Adiciona colunas para cada item
        AdicionaColunas = List.Accumulate(
            listaItens,
            tabela,
            (estadoAtual, item) =>
                Table.ReplaceErrorValues(
                    Table.AddColumn(
                        estadoAtual,
                        item,
                        each if Text.Contains(Text.Upper(Record.Field(_, colunaOrigem)), Text.Upper(item)) then true else false
                    ),
                    {{item, null}}
                )
        ),

        // Cria coluna "Outros" com valores que não correspondem a nenhum transtorno da lista
        AdicionaOutros = Table.AddColumn(
            AdicionaColunas,
            "Outros",
            each if List.AnyTrue(List.Transform(listaItens, (t) => Text.Contains(Text.Upper(Record.Field(_, colunaOrigem)), Text.Upper(t))))
                then null
                else Record.Field(_, colunaOrigem)
        )
    in
        AdicionaOutros
in AdicionarColunasFinal
